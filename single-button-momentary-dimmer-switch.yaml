blueprint:
  name: Single button dimmer switch
  description: Swith a light on/off, dim up/down by holding.
  domain: automation
  input:
    button:
      name: Button
      selector:
        entity:
          domain: sensor
    light:
      name: Light
      selector:
        entity:
          domain: light
    force_brightness:
      name: Force turn on brightness
      description: >
        Force the brightness to the set level below, when the "on" button on
        the remote is pushed and lights turn on.
      default: false
      selector:
        boolean:
    brightness:
      name: Brightness
      description: Brightness of the light(s) when turning on
      default: 128
      selector:
        number:
          min: 0
          max: 255
          mode: slider
          step: 1
    brightness_step_pct:
      name: Brightness step
      description: Step size of brightness increase/decrease in each transition step.
      default: "30"
      selector:
        number:
          min: "1"
          max: "255"
    transition_step_length:
      name: Transition step length
      description: Length of each transition step.
      default: "0.1"
      selector:
        number:
          min: "0"
          max: "5"
          step: "0.01"
          unit_of_measurement: s

mode: restart

trigger:
  - platform: state
    entity_id: !input button
    to: "single"
  - platform: state
    entity_id: !input button
    from: ""
    to: "hold"
    
action:
  - variables:
      command: "{{ trigger.to_state.state }}"
      command_prev: "{{ trigger.from_state.state }}"
      brightness_step_pct_positive: !input brightness_step_pct
      brightness_step_pct_negative: "{{ brightness_step_pct_positive|int * -1 }}"
  - choose:
      - conditions:
          - "{{ command == 'single' }}"
        sequence:
          - choose:
              - conditions: "{{ force_brightness }}"
                sequence:
                  - service: light.toggle
                    data:
                      transition: 1
                      brightness: !input brightness
                    entity_id: !input light
            default:
              - service: light.toggle
                data:
                  transition: 1
                entity_id: !input light
      - conditions: 
          - "{{ command == 'hold' }}"
        sequence:
          - choose:
              - conditions: "{{ command_prev == 'hold_release' }}"
                sequence:
                  # dim up
                  - repeat:
                      while:
                        - condition: state
                          entity_id: !input button
                          state: "hold"
                      sequence:
                        - service: light.turn_on
                          data:
                            transition: !input transition_step_length
                            brightness_step_pct: "{{ brightness_step_pct_positive }}"
                          entity_id: !input light
            default:
              # dim down
              - repeat:
                  while:
                    - condition: state
                      entity_id: !input button
                      state: "hold"
                  sequence:
                    - service: light.turn_on
                      data:
                        transition: !input transition_step_length
                        brightness_step_pct: "{{ brightness_step_pct_negative }}"
                      entity_id: !input light